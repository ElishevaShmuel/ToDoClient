{"ast":null,"code":"import axios from 'axios';\nimport dotenv from 'dotenv';\ndotenv.config();\naxios.defaults.baseURL = apiUrl.env.API_URL;\naxios.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error.response ? error.response.data : error.message);\n  return Promise.reject(error);\n});\nlet count = 0;\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/Items`);\n    return result.data;\n  },\n  addTask: async name => {\n    count += 1;\n    const result = await axios.post(`/Items`, {\n      Name: name,\n      Id: count\n    });\n    return result.data;\n  },\n  setCompleted: async t => {\n    console.log(t);\n    const result = await axios.put(`/Items/${t.Id}`, {\n      IsComplete: t.isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`/Items/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","dotenv","config","defaults","baseURL","apiUrl","env","API_URL","interceptors","response","use","error","console","data","message","Promise","reject","count","getTasks","result","get","addTask","name","post","Name","Id","setCompleted","t","log","put","IsComplete","isComplete","deleteTask","id","delete"],"sources":["C:/Users/user1/Desktop/My Project/כיתה ו/פרקטיקוד/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\nimport dotenv from 'dotenv';\ndotenv.config();\n\naxios.defaults.baseURL = apiUrl.env.API_URL; \n\n\naxios.interceptors.response.use(\n  response => response, \n    error => {\n    console.error('API Error:', error.response ? error.response.data : error.message);\n    return Promise.reject(error);\n  }\n);\nlet count=0;\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/Items`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    count+=1;\n    const result=await axios.post(`/Items`,{Name:name,Id:count})\n    return result.data\n  },\n\n  setCompleted: async(t)=>{\n    console.log(t);\n    \n    const result=await axios.put(`/Items/${t.Id}`,{IsComplete: t.isComplete})\n    return result.data\n  },\n\n  deleteTask:async(id)=>{   \n    const result=await axios.delete(`/Items/${id}`)\n    return result.data\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3BA,MAAM,CAACC,MAAM,CAAC,CAAC;AAEfF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAGC,MAAM,CAACC,GAAG,CAACC,OAAO;AAG3CP,KAAK,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EAClBE,KAAK,IAAI;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;EACjF,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AACD,IAAIM,KAAK,GAAC,CAAC;AACX,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,MAAM,CAACN,IAAI;EACpB,CAAC;EAEDQ,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBL,KAAK,IAAE,CAAC;IACR,MAAME,MAAM,GAAC,MAAMnB,KAAK,CAACuB,IAAI,CAAC,QAAQ,EAAC;MAACC,IAAI,EAACF,IAAI;MAACG,EAAE,EAACR;IAAK,CAAC,CAAC;IAC5D,OAAOE,MAAM,CAACN,IAAI;EACpB,CAAC;EAEDa,YAAY,EAAE,MAAMC,CAAC,IAAG;IACtBf,OAAO,CAACgB,GAAG,CAACD,CAAC,CAAC;IAEd,MAAMR,MAAM,GAAC,MAAMnB,KAAK,CAAC6B,GAAG,CAAC,UAAUF,CAAC,CAACF,EAAE,EAAE,EAAC;MAACK,UAAU,EAAEH,CAAC,CAACI;IAAU,CAAC,CAAC;IACzE,OAAOZ,MAAM,CAACN,IAAI;EACpB,CAAC;EAEDmB,UAAU,EAAC,MAAMC,EAAE,IAAG;IACpB,MAAMd,MAAM,GAAC,MAAMnB,KAAK,CAACkC,MAAM,CAAC,UAAUD,EAAE,EAAE,CAAC;IAC/C,OAAOd,MAAM,CAACN,IAAI;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}